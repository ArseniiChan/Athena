version: '3.8'

services:
  # Python Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: athena-backend
    ports:
      - "8000:8000"
    environment:
      # Google Cloud Configuration
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION:-us-central1}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/service-account-key.json
      - DOCUMENTAI_PROCESSOR_ID=${DOCUMENTAI_PROCESSOR_ID}
      - VERTEX_AI_MODEL=${VERTEX_AI_MODEL:-gemini-1.5-flash}
      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - ENVIRONMENT=production
    volumes:
      # Mount service account key (read-only)
      - ./service-account-key.json:/app/service-account-key.json:ro
      # Persist uploads and outputs
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
    networks:
      - athena-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend
  frontend:
    build:
      context: ./athena-web
      dockerfile: Dockerfile
    container_name: athena-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - athena-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  athena-network:
    driver: bridge

volumes:
  uploads:
    driver: local
  outputs:
    driver: local